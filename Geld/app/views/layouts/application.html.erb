<!DOCTYPE html>
<html>
  <head>
    <title>Geld</title>
    <%= csrf_meta_tags %>
    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= favicon_link_tag('/assets/Favicon.png', alt:'Logo')%>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
    <script src="https://unpkg.com/popper.js"></script>
    <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
    <%= javascript_include_tag 'application' %>
  </head>

  <body>
<%= render partial: 'layouts/nav' %>

    <%= yield %>

<div class="modal fade" id="myModal">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
  <iframe src="https://giphy.com/embed/3o7TKNkzG2YLWPpYBO" width="480" height="330" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p><a href="https://giphy.com/gifs/hulu-fxx-its-always-sunny-in-philadelphia-3o7TKNkzG2YLWPpYBO">via GIPHY</a></p>
      </div>
    </div>
  </div>
</div>

    <script>
    (function($) {
        var handler = Plaid.create({
            apiVersion: 'v2',
            clientName: 'Plaid Walkthrough Demo',
            env: 'sandbox',
            product: ['transactions'],
            key: '<%= ENV["PLAID_PUBLIC_KEY"] %>',
            onSuccess: function(public_token) {
              console.log(public_token)
                $.post('/user_page/access_token', {public_token: public_token}, function() {
                    $('#container').fadeOut('fast', function() {
                        $('#intro').hide();
                        $('#app').fadeIn('slow');
                        const app = new Vue({
                          el: '#app',

                          updated: function() {
                            this.fetchTransactions;
                          },

                          data: {
                            transactions: [],
                            loading: false,
                            transactionClicked: false,
                            categories: [],
                            defaultData: [],
                            totalSpent: "",
                            accounts: [],
                            accountTxn: [],
                            accountTransactions: [],
                            item: "",
                            accountTotal: [],
                            expected_total: "",
                            monthly_expenses: "",
                            calculated: "",
                          },

                          methods: {
                            savingsCalc: function() {
                              this.calculated = parseInt(this.expected_total) + parseInt(this.monthly_expenses);
                            },
                            fetchTransactions: function() {
                              this.loading = true;
                                $.ajax({
                                  url: "/user_page/transactions",
                                  type: "GET",
                                  datatype: "json",
                                }).done(function (data){
                                  this.transactions = data.transactions
                                  this.accounts = data.accounts
                                  this.item = data.item
                                  this.loading = false
                                  this.accountIds = getAccountIds(this.accounts)
                                  this.categories = getCategories(data.transactions)
                                  this.defaultData = getAmount(data.transactions, this.categories)
                                  this.totalSpent = totalSpend(this.defaultData)
                                  this.accountTotal = totalAccountAmount(this.accounts)

                                  new Chart(document.getElementById("myCanvas"), {
                                    type: "doughnut",
                                    data: {
                                      labels: this.categories,
                                        datasets: [{
                                          label: "Dollars ($)",
                                          backgroundColor: ["#3e95cd", "#58FCC1","#11e1ff","#ffce00","#c45850","#a33cf4", "#99ffff"],
                                          data: this.defaultData
                                        }]
                                      },
                                      options: {
                                        title: {
                                          display: true,
                                          text: 'Here is what you\'ve spent your money on ($)'
                                        }
                                      }
                                  })
                                }.bind(this));
                            }
                          }
                        })
                      app.fetchTransactions();
                    });
                });
            },
        });

        $('#link-btn').on('click', function(e) {
            handler.open();
        });

    })(jQuery);

    function getAccountIds(jsonAccounts) {
      var accounts = jsonAccounts;
      var accountIds = [];

      accounts.forEach((account, index) => {
        accountIds[index] = account.account_id;
      })
      console.log(accountIds)
      return accountIds;
    }

    function totalAccountAmount(jsondata) {
      var accounts = jsondata;
      var accountAmount = [];

      accounts.forEach((account, index) => {
        accountAmount[index] = account.balances.current;
      })
      var total = accountAmount.reduce(function(total, amount) {
        return total + amount;
      }, 0)
      return total.toFixed(2);
    }

    function totalSpend(jsondata) {
      var data = jsondata;
      var newData = data.reduce(function(total, amount) {
        return total + amount;
      }, 0)
      return newData.toFixed(2);
    }

    function getAmount(jsondata, jsoncateg) {
      var data = jsondata;
      var categories = jsoncateg;
      var newData = [];
      var newAmount = [];
      categories.forEach((category, index) => {
        newData[index] = data.filter(function(ob) {
          return ob.category[0] == categories[index];
        })
      })
      newData.forEach((category, index) => {
        newAmount[index] = category.reduce(function (total, ob) { return total + ob.amount }, 0)
      })
      newAmount = newAmount.map(function(each_element){
        return Number(each_element.toFixed(2));
      })
      return newAmount;
    }

    function getCategories(jsondata) {
      var data = jsondata;
      var newData = [];
      data.forEach((txn, index) => {
       newData[index] = txn.category[0]
      })
      unqData = Array.from(new Set(newData))
      return unqData;
    }
    function onKonamiCode(cb) {
      var input = '';
      var key = '38384040373937396665';
      document.addEventListener('keydown', function (e) {
        input += ("" + e.keyCode);
        if (input === key) {
          return cb();
        }
        if (!key.indexOf(input)) return;
        input = ("" + e.keyCode);
      });
    }

    onKonamiCode(function () {
      $("#myModal").modal("show");
    })
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"></script>

  </body>
</html>
